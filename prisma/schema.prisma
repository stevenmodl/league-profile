// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  slug       String      @id
  gameName   String
  tagLine    String
  platform   String
  puuid      String
  createdAt  DateTime    @default(now())
  snapshots  Snapshot[]
  matches    MatchAgg[]
}

model Snapshot {
  id          String   @id @default(cuid())
  accountSlug String
  queueType   String   // e.g., "RANKED_SOLO_5x5", "RANKED_FLEX_SR"
  createdAt   DateTime @default(now())
  tier        String
  rank        String
  lp          Int
  wins        Int
  losses      Int
  hotStreak   Boolean  @default(false)
  Account     Account  @relation(fields: [accountSlug], references: [slug])

  @@index([accountSlug, queueType, createdAt])
}

model MatchAgg {
  id          String   @id // `${matchId}:${accountSlug}`
  accountSlug String
  matchId     String
  createdAt   DateTime @default(now())
  queueId     Int
  win         Boolean
  k           Int
  d           Int
  a           Int
  csPerMin    Float
  goldPerMin  Float
  dmgShare    Float?
  champId     Int
  role        String?
  lpChange    Int?     // LP gain/loss for ranked games (null for non-ranked)
  Account     Account  @relation(fields: [accountSlug], references: [slug])

  @@index([accountSlug, createdAt])
}

model Champion {
  id        Int      @id // Champion ID (e.g., 1 for Annie)
  key       String   // Champion key (e.g., "Annie")
  name      String   // Champion name (e.g., "Annie")
  title     String   // Champion title (e.g., "the Dark Child")
  imageUrl  String   // Icon URL
  updatedAt DateTime @default(now())
}